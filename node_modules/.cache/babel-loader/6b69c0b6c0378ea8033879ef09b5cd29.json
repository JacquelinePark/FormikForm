{"ast":null,"code":"var _jsxFileName = \"/Users/Jackie/Desktop/MIT Coding Course/Mod 13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(\"form:\", values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"Field Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.password) errors.password = \"Field Required\";\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"emailField\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        id: \"emailError\",\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pswField\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        id: \"pswError\",\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"submitBtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","console","log","validate","errors","test","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","style","color","name","_c","$RefreshReg$"],"sources":["/Users/Jackie/Desktop/MIT Coding Course/Mod 13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      console.log(\"form:\", values);\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"Field Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.password) errors.password = \"Field Required\";\n      return errors;\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email:</div>\n        <input\n          type=\"text\"\n          id=\"emailField\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.errors.email ? (\n          <div style={{ color: \"red\" }} id=\"emailError\">\n            {formik.errors.email}\n          </div>\n        ) : null}\n        <div>Password:</div>\n        <input\n          type=\"text\"\n          name=\"pswField\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <br />\n        {formik.errors.password ? (\n          <div style={{ color: \"red\" }} id=\"pswError\">\n            {formik.errors.password}\n          </div>\n        ) : null}\n        <button type=\"submit\" id=\"submitBtn\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}